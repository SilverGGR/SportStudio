<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="userBindingSource2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>329, 17</value>
  </metadata>
  <metadata name="userBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="userBindingSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>170, 17</value>
  </metadata>
  <metadata name="Email.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Password.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="FirstName.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="LastName.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Street.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="StreetNumber.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="City.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="PostalCode.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="membershipBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>488, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BP8DlkhIiPvgbsAAAAAASUVORK5CYII=
</value>
  </data>
</root>